//Time O(2^n) | Space O(n)
function fibonacci(n){
	if(n === 1)
		return 0;
	if(n === 2)
		return 1;
	return fibonacci(n-1) + fibonacci(n-2);
}

//Time O(n) | Space O(n)
function fibonacci(n, ht = { 1: 0, 2: 1}){
	if(n in ht){
		return ht[n];
	}
	else{
		return ht[n] = fibonacci(n-1, ht) + fibonacci(n-2, ht)
	}
}
//Time O(n) | Space O(1)
function fibonacci(n) {
  let n1 = 0,
    n2 = 1,
    n3 = 0,
    counter = 0;
  while (counter < 4) {
    n3 = n1 + n2;
    n1 = n2;
    n2 = n3;
    counter++;
  }
  return n3;
}


